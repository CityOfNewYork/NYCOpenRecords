#!/bin/bash
#
# vault        Manage the vault server
#
# chkconfig:   2345 95 04
# description: Vault is a tool for securely storing application secrets.
# processname: vault
# config: /etc/init/vault.conf
# pidfile: /var/run/vault.pid

### BEGIN INIT INFO
# Provides:       vault
# Required-Start: $local_fs $network
# Required-Stop:
# Should-Start:
# Should-Stop:
# Default-Start: 2 3 4 5
# Default-Stop:  0 1 6
# Short-Description: Manage the vault server
# Description: Vault is a tool for securely storing application secrets.
### END INIT INFO

# source function library
. /etc/rc.d/init.d/functions

# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit 0

prog="vault"
user="vault"
exec="/usr/local/bin/$prog"
pidfile="/var/run/$prog.pid"
lockfile="/var/lock/subsys/$prog"
logfile="/var/log/$prog"
conffile="/etc/vault.d/config.json"
confdir="/etc/vault.d"

# pull in sysconfig settings
[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

export GOMAXPROCS=${GOMAXPROCS:-2}

start() {
    [ -x $exec ] || exit 5
    [ -d $confdir ] || exit 6

    echo -n $"Starting $prog: "
    touch $logfile $pidfile
    daemon "{ $exec server $OPTIONS -config=$confdir &>> $logfile & }; echo \$! >| $pidfile"

    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then
        touch $lockfile
        unseal
    fi
    echo
    return $RETVAL
}

stop() {
    echo -n $"Stopping $prog: "
    killproc -p $pidfile $exec 2>> $logfile
    RETVAL=$?
    [ $RETVAL -eq 0 ] && rm -f $lockfile
    echo
    return $RETVAL
}

restart() {
    stop
    start
}

reload() {
    echo -n $"Reloading $prog: "
    killproc -p $pidfile $exec -HUP
    echo
}

force_reload() {
    restart
}

rh_status() {
    status $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}

unseal() {
    while :
    do
        ss -pl | fgrep "((\"$prog\"," > /dev/null
        [ $? -eq 0 ] && break
        sleep 0.1
    done
    for key in $KEYS; do $exec unseal $CERT $key >> $logfile ; done
}

seal() {
    $exec seal $CERT >> $logfile
}

case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 7
        restart
        ;;
    unseal)
        $1
        ;;
    seal)
        $1
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|unseal|seal}"
        exit 2
esac

exit $?